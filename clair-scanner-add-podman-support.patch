diff -ruN clair-scanner.orig/clair.go clair-scanner/clair.go
--- clair-scanner.orig/clair.go	2021-12-17 10:10:46.340957666 +0800
+++ clair-scanner/clair.go	2021-12-17 10:12:12.419735780 +0800
@@ -34,9 +34,9 @@
 		logger.Infof("Analyzing %s", layerIds[i])
 
 		if i > 0 {
-			analyzeLayer(clairURL, tmpPath+"/"+layerIds[i]+"/layer.tar", layerIds[i], layerIds[i-1])
+			analyzeLayer(clairURL, tmpPath+"/"+layerIds[i]+".tar", layerIds[i], layerIds[i-1])
 		} else {
-			analyzeLayer(clairURL, tmpPath+"/"+layerIds[i]+"/layer.tar", layerIds[i], "")
+			analyzeLayer(clairURL, tmpPath+"/"+layerIds[i]+".tar", layerIds[i], "")
 		}
 	}
 }
diff -ruN clair-scanner.orig/docker.go clair-scanner/docker.go
--- clair-scanner.orig/docker.go	2021-12-17 10:10:46.340957666 +0800
+++ clair-scanner/docker.go	2021-12-17 10:12:53.908113026 +0800
@@ -1,10 +1,10 @@
 package main
 
 import (
-	"context"
 	"encoding/json"
 	"io"
 	"os"
+	"os/exec"
 	"strings"
 
 	"github.com/docker/docker/client"
@@ -18,17 +18,23 @@
 
 // saveDockerImage saves Docker image to temorary folder
 func saveDockerImage(imageName string, tmpPath string) {
-	docker := createDockerClient()
-
-	imageReader, err := docker.ImageSave(context.Background(), []string{imageName})
-	if err != nil {
-		logger.Fatalf("Could not save Docker image [%s]: %v", imageName, err)
-	}
-
-	defer imageReader.Close()
-
-	if err = untar(imageReader, tmpPath); err != nil {
-		logger.Fatalf("Could not save Docker image: could not untar [%s]: %v", imageName, err)
+	
+	reader, writer := io.Pipe()
+	defer writer.Close()
+	
+	cmd := exec.Command("bash","-c", "podman save " + imageName)
+	cmd.Stdout = writer
+
+	go func() {
+		defer reader.Close()
+
+		if err := untar(reader, tmpPath); err != nil {
+			logger.Fatalf("Could not save Docker image: could not untar [%s]: %v", imageName, err)
+		}
+	}()
+	
+	if err := cmd.Run(); err != nil {
+		logger.Fatalf("Could not run the podman command: %s\n", err)
 	}
 }
 
@@ -46,7 +52,7 @@
 
 	var layers []string
 	for _, layer := range manifest[0].Layers {
-		layers = append(layers, strings.TrimSuffix(layer, "/layer.tar"))
+		layers = append(layers, strings.TrimSuffix(layer, ".tar"))
 	}
 	return layers
 }
