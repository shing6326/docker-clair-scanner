#!/usr/bin/env python3

import sys
import json
import os
import requests
from datetime import datetime

class gitlabReportConverter:

    vulnerabilities = []
    result = { 'version': '3.0.0',
               'vulnerabilities': [],
               'remediations': [],
               'scan': {
                 'scanner': {
                   'id': 'clair',
                   'name': 'clair',
                   'url': 'https://github.com/quay/clair',
                   'vendor': {
                     'name': 'Red Hat'
                   },
                   'version': 'latest'
                 },
                 'type': 'container_scanning',
                 'status': 'success',
                 'start_time': datetime.now().isoformat(timespec='seconds'),
                 'end_time': datetime.now().isoformat(timespec='seconds')
               }
             }

    def __init__(self):
        input = sys.stdin.read()
        self.clair_data = json.loads(input)
        self.addVulerability()
        self.printJson()

    def addVulerability(self):
        for v in self.clair_data['vulnerabilities']:
            try:
                response = requests.get('https://cve.circl.lu/api/cve/' + v['vulnerability'])
                json = response.json()
                description = json['summary']
            except:
                description = v['vulnerability'] + ' vulnerability in ' + v['featurename'] + ' package'
            solution = 'Upgrade ' + v['featurename'] + ' to ' + v['fixedby']
            self.result['scan']['status'] = 'failure'
            self.result['vulnerabilities'].append(
                {
                    'category': 'container_scanning',
                    'message': description,
                    'description': description,
                    'cve':  v['vulnerability'],
                    'severity': v['severity'],
                    'confidence': 'Unknown',
                    'solution': solution,
                    'scanner': {
                        'id': 'clair',
                        'name': 'clair'
                    },
                    'location': {
                        'dependency': {
                            'package': {
                                'name': v['featurename']
                            },
                            'version': v['featureversion']
                        },
                        'operating_system': v['namespace'],
                        'image': os.environ['CI_REGISTRY_IMAGE'] + ':' + os.environ['CI_COMMIT_SHORT_SHA']
                    },
                    'identifiers': [
                        {
                            'type': 'cve',
                            'name': v['vulnerability'],
                            'value': v['vulnerability'],
                            'url': v['link']
                        }
                    ],
                    'links': [
                        {
                            'url': v['link']
                        }
                    ]
                }
            )
            self.result['remediations'].append(
                {
                    'fixes': [
                        {
                            'cve': v['vulnerability']
                        }
                    ],
                    'summary': solution,
                    'diff': 'Unknown'
                }
            )

    def printJson(self):
        print(json.dumps(self.result, indent=2))

gitlabReportConverter()
